<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Storage;
use Spatie\Feed\FeedItem;

class News extends Model implements FeedItem
{
    protected $fillable = [
        'title', 'summary', 'publish', 'content'
    ];

    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function path()
    {
        return "/news/{$this->id}";
    }

    public function imageUrl()
    {
        return starts_with($this->image, 'http://') ? $this->image : Storage::url($this->image);
    }

    public function url()
    {
        return url('news', [$this->id]);
    }

    public function delete()
    {
        if (!is_null($this->image) && !starts_with($this->image, 'http://') && Storage::exists($this->image)) {
            Storage::delete($this->image);
        }

        return parent::delete(); // TODO: Change the autogenerated stub
    }

    /*
     *  Retrieves latest active 10 news articles.
     *
     */
    public static function getFeaturedItems(){
        return News::with('user')->where('publish', true)->orderBy('created_at', 'desc')->take(10)->get();
    }

    /*
     *  RSS Feed function.
     */
    public function getFeedItemId()
    {
        return $this->id;
    }

    /*
     *  RSS Feed function.
     */
    public function getFeedItemTitle()
    {
        return $this->title;
    }

    /*
     *  RSS Feed function.
     */
    public function getFeedItemSummary()
    {
        return $this->summary;
    }

    /*
     *  RSS Feed function.
     */
    public function getFeedItemUpdated()
    {
        return $this->updated_at;
    }

    /*
     *  RSS Feed function.
     */
    public function getFeedItemLink()
    {
        return $this->url();
    }

    /*
     *  RSS Feed function.
     */
    public function getFeedItemAuthor()
    {
        return $this->user->name;
    }

}
